<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_sthc_carelink.CartCarelink</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Utility Scripts to make background ordering of catalog items easier.&#13;
&#13;
Sample usage:&#13;
&#13;
gs.include('Cart');&#13;
&#13;
var cart = new Cart();&#13;
var item = cart.addItem('e2132865c0a8016500108d9cee411699');&#13;
cart.setVariable(item, 'phone', 'pat');&#13;
var rc = cart.placeOrder();&#13;
gs.print(rc.number);&#13;
&#13;
To create a named cart:&#13;
var cart = new Cart("Cart 1");&#13;
...&#13;
&#13;
To create a cart for a specific user:&#13;
var cart = new Cart(null, "62826bf03710200044e0bfc8bcbe5df1");&#13;
...&#13;
&#13;
To create a named cart for a specific user:&#13;
var cart = new Cart("Cart 1", "62826bf03710200044e0bfc8bcbe5df1");&#13;
...</description>
        <name>CartCarelink</name>
        <script><![CDATA[gs.include("PrototypeServer");

var CartCarelink = Class.create();

CartCarelink.prototype = {
    /**
     * @param cartName - name to use when creating/retrieving a cart. If the name is not passed in
     *            (or if it's null/undefined) the default cart will be used
     * @param userID - sys_id of the user to use when creating/retrieving a cart. It's also the user
     *            that will be used as the openedBy user on the request when an order is placed. If
     *            the user is not passed in (or if it's null/undefined) current user will be used.
     */
    initialize: function(cartName, userID) {
        this.cartName = !cartName ? null : cartName;
        this.userID = !userID ? null : userID;

        this.cart = this.getCartCarelink();
        this.clearCartCarelink();
    },

    getCartCarelink: function() {
        var cart = GlideappCartCarelink.getCartCarelinkForRhino(this.cartName, this.userID);
        return cart.getGlideRecord();
    },

    clearCartCarelink: function() {
        var id = this.cart.sys_id;
        var kids = new GlideRecord('sc_cart_item');
        kids.addQuery('cart', id);
        kids.deleteMultiple();
    },
    
    deleteCartCarelink: function() {
        var cart = GlideappCartCarelink.getCartCarelinkForRhino(this.cartName, this.userID);
        cart.empty();
    },

    addItem: function(itemID, quantity) {
        if (typeof (quantity) == 'undefined')
            quantity = 1;
        var gr = new GlideRecord('sc_cart_item');
        gr.initialize();
        gr.cart = this.cart.sys_id;
        gr.cat_item = itemID;
        gr.quantity = quantity;
        var rc = gr.insert();
        this.prepVariables(itemID, rc);
        return rc;
    },

    prepVariables: function(itemID, cart_id) {
        var ci = GlideappCatalogItem.get(itemID);
        var gr = ci.getStandaloneVariables();
		var seq = 1;
        while (gr.next()) {
			var question = new GlideappQuestion.getQuestion(gr.sys_id);
            var variable = new GlideRecord('sc_item_option');
            variable.initialize();
            variable.value.setValue(question.getValue());
            variable.item_option_new = gr.sys_id;
            variable.cart_item = cart_id;
			variable.order = seq;
            variable.insert();
			seq++;
        }
    },

    setVariable: function(cartID, variable_name, value) {
        var variable = new GlideRecord('sc_item_option');
        variable.addQuery('cart_item', cartID);
        variable.addQuery('item_option_new', variable_name).addOrCondition('item_option_new.name', variable_name);
        variable.query();
        if (variable.next()) {
			variable.value.setValue(value);
            variable.update();
        }
    },

    placeOrder: function() {
        var req = new GlideappRequestNew();
        var rc = req.copyCartCarelink(this.cartName, this.userID);
        this.clearCartCarelink();
        return rc;
    }
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>LGOMEZ</sys_created_by>
        <sys_created_on>2018-02-27 22:28:47</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>738022a96f2053c061f06ea22e3ee440</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>CartCarelink</sys_name>
        <sys_package display_value="CareLink" source="x_sthc_carelink">825d1f0f6f0cd740277218d22e3ee4fe</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CareLink">825d1f0f6f0cd740277218d22e3ee4fe</sys_scope>
        <sys_update_name>sys_script_include_738022a96f2053c061f06ea22e3ee440</sys_update_name>
        <sys_updated_by>LGOMEZ</sys_updated_by>
        <sys_updated_on>2018-02-27 22:29:01</sys_updated_on>
    </sys_script_include>
</record_update>
